<%
  record_column = column
  readonly = (@record.readonly? or not @record.authorized_for?(:crud_type => :update))
  crud_type = @record.new_record? ? :create : (readonly ? :read : :update)
  show_actions = false
  config = active_scaffold_config_for(@record.class)
  options = active_scaffold_input_options(config.columns[@record.class.primary_key], scope)
  tr_id = "association-#{options[:id]}"

  if config.subform.layout == :vertical
    row_tag ||= :ol
    column_tag ||= :li
    default_col_class = ['form-element']
    flatten = true unless local_assigns.has_key? :flatten
  else
    row_tag ||= :tr
    column_tag ||= :td
    default_col_class = []
    flatten ||= false
  end

  columns_length = 0
  columns_groups = []
-%>
<%= content_tag row_tag, :id => tr_id, :class => "association-record#{' association-record-new' if @record.new_record?}#{' locked' if locked}" do %>
<% config.subform.columns.each :for => @record.class, :crud_type => :read, :flatten => flatten do |column| %>
<%
  if column.is_a? ActiveScaffold::DataStructures::ActionColumns
    columns_groups << column
    next
  end

  next unless in_subform?(column, parent_record)
  columns_length += 1
  show_actions = true
  column = column.clone
  column.form_ui ||= :select if column.association
  
  col_class = default_col_class.clone
  col_class << 'required' if column.required?
  col_class << column.css_class unless column.css_class.nil? || column.css_class.is_a?(Proc)
  col_class << 'hidden' if column_renders_as(column) == :hidden
-%>
  <%= content_tag column_tag, :class => col_class.join(' ') do %>
    <%= active_scaffold_render_subform_column(column, scope, crud_type, readonly) %>
  <% end %>
<% end -%>
<% if show_actions -%>
  <%= content_tag column_tag, :class => "actions" do %>
    <% if record_column.plural_association? and (@record.authorized_for?(:crud_type => :delete) or not [:destroy, :delete_all].include?(record_column.association.options[:dependent])) %>
      <% destroy_id = "#{options[:id]}-destroy" %>
      <%= link_to as_(:remove), '#', :class => 'destroy', :id => destroy_id , :onclick => "ActiveScaffold.delete_subform_record(\"#{tr_id}\"); return false;", :style=> "display: none;" %>
      <%= javascript_tag("ActiveScaffold.show('#{destroy_id}');") if !locked %>
    <% end %>
    <% unless @record.new_record? %>
      <input type="hidden" name="<%= options[:name] -%>" id="<%= options[:id] -%>" value="<%= @record.id -%>" />
    <% end -%>
  <% end %>
<% end -%>
<% end %>

<% columns_groups.each do |column| %>
<%= content_tag row_tag, :class => 'associated-record' do %>
  <%= content_tag column_tag, :colspan => columns_length do %>
  <% column.each :for => @record.class, :crud_type => :read, :flatten => true do |col| %>
    <%= active_scaffold_render_subform_column(col, scope, crud_type, readonly) %>
  <% end %>
  <% end %>
<% end %>
<% end %>